---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xuexiao.
--- DateTime: 2022/2/21 下午8:44
---
local basic = require("luaScript.module.common.basic");
-- 导入自定义模块
local RedisKeyRateLimit = require("luaScript.module.ratelimit.RedisKeyRateLimit");
--定义出错的JSON输出对象
local errorOut = {errorCode = -1, errorMsg = "限流出错", data = {} };

--获取请求参数
local args = nil;
if "GET" == ngx.var.request_method then
    args = ngx.req.get_uri_args();
elseif "POST" == ngx.var.request_method then
    ngx.req.read_body();
    args = ngx.req.get_post_args();
end

--ngx.say(args["a"]);
--ngx.say(ngx.var.remote_addr);

-- 获取用户IP
local shortKey = ngx.var.remote_addr;

if not shortKey or shortKey == ngx.null then
    errorOut.errMsg = "shortKey 不能为空";
    ngx.say(cjson.encode(errorOut));
    return;
end

-- 拼接计数的Redis Key
local key = "count_rate_limit:ip:"..shortKey;

local limiter = RedisKeyRateLimit:new(key);

local pass = limiter:acquire();

if pass then
    ngx.var.count = limiter:getCount();
    basic.log("access_auth_nginx get count = "..ngx.var.count)
end

limiter:close();

if not pass then
    errorOut.errorMsg = "您的操作太频繁了，请稍后再试.";
    ngx.say(cjson.encode(errorOut));
    ngx.say(ngx.HTTP_UNAUTHORIZED);
end

return;