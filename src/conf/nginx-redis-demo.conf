
#user  nobody;
worker_processes  1;

#生产环境
#error_log  logs/error.log;
#测试环境
#error_log  logs/error.log  info;
#开发环境
error_log  logs/error.log  debug;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    #include       mime.types;
    default_type  text/html;
    charset utf-8;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #指定缓存信息
    lua_shared_dict ngx_cache 128m;
    #保证只有一个线程去访问redis或是mysql-lock for cache
    lua_shared_dict cache_lock 100k;

    #定义存储IP黑名单的共享内存变量
    lua_shared_dict black_ip_list 1m;

    #lua扩展加载
    lua_package_path    "./?.lua;/usr/local/openresty/conf/?/?.lua;/usr/local/openresty/conf/?.lua;/Users/xuexiao/Software/openresty/work/conf/?/?.lua;/Users/xuexiao/Software/openresty/work/conf/?.lua;;";
    lua_package_cpath   "/usr/local/openresty/lualib/?/?.so;/usr/local/openresty/lualib/?.so;;";

    #项目初始化
    init_by_lua_file    luaScript/initial/loading_config.lua;

    #调试模式：关闭lua脚本缓存
    lua_code_cache  off;


    server {
        listen       80 default;
        server_name  localhost;
        default_type text/html;
        charset      utf-8;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            echo "默认根路径匹配： /";
        }

        #测试lua是否可运行
        location /lua {
            content_by_lua 'ngx.say("Hello Lua!")';
        }

        #redis CRUD简单操作示例
        location /redis_demo {
            content_by_lua_file luaScript/redis/RedisDemo.lua;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
